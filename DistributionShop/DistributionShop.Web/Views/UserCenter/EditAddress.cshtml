@using DistributionShop.Models.Utils;
@model DistributionShop.Models.ViewModels.AddOrUpdateAddressViewModel
@{
    ViewBag.Title = "编辑";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head{
    <link rel="stylesheet" href="~/Assets/web/css/personal.css">
    <script src="~/Scripts/plupload/plupload.full.min.js"></script>
}

<div class="personalcon">
    <div class="md1200">
        <div class="breadnav"><a href="javascript:;">收货人管理</a><span>&gt;</span><a href="javascript:;">编辑</a></div>
        <div class="consigneeeditbox">
            <div class="title">收货人信息</div>
            <div class="tipbox">
                <p>根据中国海关规定，为配合进口货物查验，证明包裹物品确系个人自用，办理海关入境清关手续时需要提交收件人身份证明。</p>
                <p>您可以在 “我的订单” &gt; “收货人管理” 页面上传收件人身份证照片。请务必在下单后及时上传，否则无法出货。</p>
            </div>
            <div class="editcon">
                <div class="editleft">
                    <div class="musttip"><span class="red">*</span>为必填信息</div>
                    <dl>
                        <dt><i class="red">*</i>收货人姓名：</dt>
                        <dd>
                        <input type="text" class="inputtxt nametxt" placeholder="请输入真实姓名" id="realName" value="@(Model.Address.RealName)">
                        </dd>
                        <dd><span class="nametip">* 您可输入已存入的名字来查找收货人</span></dd>
                    </dl>
                    <dl>
                        <dt><i class="red">*</i>手机号码：</dt>
                        <dd>
                            <div class="phonebox">
                                <select class="selbox areabox" id="prePhoneType">
                                    @if (Model.PrePhoneOptionList != null && Model.PrePhoneOptionList.Count > 0)
                                    {
                                        foreach (var prePhoneOption in Model.PrePhoneOptionList)
                                        {
                                            var prePhoneType = Model.Address?.PrePhoneType??(int)PhoneTypeEnums.中国;
                                            <option value="@(prePhoneOption.Value)" @(prePhoneType==prePhoneOption.Value?"selected":"")>@(prePhoneOption.Desction)(@(prePhoneOption.Text))</option>
                                        }
                                    }
                                </select>
                                <input type="text" class="phonetxt" placeholder="请输入手机号码" value="@(Model.Address.TelPhone)" id="telPhone">
                            </div>
                        </dd>
                    </dl>
                    <dl>
                        <dt><i class="red">*</i>收货地址：</dt>
                        <dd>
                            <select class="selbox countrysel" id="county" disabled>
                                @if (Model.CountryList != null && Model.CountryList.Count > 0)
                                {
                                    foreach (var country in Model.CountryList)
                                    {
                                        var countyId = 0;// Model.Address.CountyId;
                                        <option value="@(country.CountryId)" @(countyId == country.CountryId ? "selected" : "")>@(country.CountryName)</option>
                                    }
                                }
                            </select>
                            <select class="selbox provincesel" id="province" onchange="AddressChange(0)">
                                @if (Model.ProvinceList != null && Model.ProvinceList.Count > 0)
                                {
                                    for (int i = 0; i < Model.ProvinceList.Count; i++)
                                    {
                                        var obj = Model.ProvinceList[i];
                                        string select = string.Empty;
                                        if (((Model.Address == null || Model.Address.ProvinceId == null) && i == 0) || (Model.Address != null && Model.Address.ProvinceId == obj.ProID))
                                        {
                                            select = "selected";
                                        }
                                        <option value="@(obj.ProID)" @(select)>@(obj.ProName)</option>
                                    }
                                }
                            </select>
                            <select class="selbox citysel" id="city" onchange="AddressChange(1)">
                                @if (Model.CityList != null && Model.CityList.Count > 0)
                                {
                                    for (int i = 0; i < Model.CityList.Count; i++)
                                    {
                                        var obj = Model.CityList[i];
                                        string select = string.Empty;
                                        if (((Model.Address == null || Model.Address.CityId == null) && i == 0) || (Model.Address != null && Model.Address.CityId == obj.CityID))
                                        {
                                            select = "selected";
                                        }
                                        <option value="@(obj.CityID)" @(select)>@(obj.CityName)</option>
                                    }
                                }
                            </select>

                            @if (Model.DistrictList != null && Model.DistrictList.Count > 0)
                            {
                                <select class="selbox areasel" id="district">
                                    @for (int i = 0; i < Model.DistrictList.Count; i++)
                                    {
                                        var obj = Model.DistrictList[i];
                                        string select = string.Empty;
                                        if (((Model.Address == null || Model.Address.DistrictId == null) && i == 0) || (Model.Address != null && Model.Address.DistrictId == obj.Id))
                                        {
                                            select = "selected";
                                        }
                                        <option value="@(obj.Id)" @(select)>@(obj.DisName)</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <select class="selbox areasel" id="district" style="display:none">  </select>
                            }
                            </dd>
                    </dl>
                    <dl>
                        <dt><i class="red">*</i>具体地址：</dt>
                        <dd>
                            <textarea class="inputtxt addresstxt" maxlength="300" placeholder="请详细输入地址信息，如道路，门牌号等信息" id="address">@(Model.Address.Address)</textarea>
                        </dd>
                        <dd><span class="jtdztip errortip">* 请填写具体地址</span></dd>
                    </dl>
                    <dl>
                        <dt>邮政编码：</dt>
                        <dd>
                            <input type="text" class="inputtxt yzbmtxt" placeholder="请输入邮政编码" id="postCode" value="@(Model.Address.PostCode)">
                        </dd>
                    </dl>
                    <dl>
                        <dt><i class="red">*</i>身份证号码：</dt>
                        <dd>
                            <input type="text" class="inputtxt sfztxt" placeholder="请输入真实身份证号码"  value="@(Model.Address.IdentityCard)" id="identityCard">
                        </dd>
                        <dd><span class="sfztip">* 身份证号码需与收件人姓名一致</span></dd>
                    </dl>
                    <div class="tjbox">
                        <span class="check @((Model.Address?.IsDefault??true)?"":"uncheck")" id="isDefault"></span>设置为默认收货人信息
                    </div>
                    <input type="button" class="btn savebtn" value="保存" onclick="Save()">
                </div>
                <div class="editright">
                    <dl>
                        <dt><span class="red">*</span>身份证正面上传：</dt>
                        <dd>
                            <div class="imgbox" id="idCard0" onclick="SetImagUrl(this)">
                                @if (Model.Address != null && !string.IsNullOrWhiteSpace(Model.Address.IDPhotoNegative))
                                {
                                    <img data-url="@(Model.Address.IDPhotoNegative)" src="@Url.Content("~/api/MediaApi/GetCoverFileName?mediaType=1&fileName="+Model.Address.IDPhotoNegative)">
                                }
                                else
                                {
                                    <img src="@Url.Content("~/Assets/web/images/idcardz.png")">
                                    @*<img src="~/images/idcardz.png">*@
                                }
                            </div>
                        </dd>
                    </dl>
                    <dl>
                        <dt><span class="red">*</span>身份证反面上传：</dt>
                        <dd>
                            <div class="imgbox" id="idCard1" onclick="SetImagUrl(this)">
                                @if (Model.Address != null && !string.IsNullOrWhiteSpace(Model.Address.IDPhotoPositive))
                                {
                                    <img data-url="@(Model.Address.IDPhotoPositive)" src="@Url.Content("~/api/MediaApi/GetCoverFileName?mediaType=1&fileName="+Model.Address.IDPhotoPositive)">
                                }
                                else
                                {
                                    <img src="@Url.Content("~/Assets/web/images/idcardf.png")">
                                }
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var uploadObj;//显示图片对象
    var imgschema =  "@Url.Content("~/api/MediaApi/GetCoverFileName?fileName=")";//显示图片地址
    //设置图片显示对象
    function SetImagUrl(obj) {
        uploadObj = '#' + $(obj).attr('id') +' img';
    }
    //实例化一个plupload上传对象
    var uploader = new plupload.Uploader({
        browse_button: ["idCard0", "idCard1"], //触发文件选择对话框的按钮，为那个元素id
        url: '@Url.Content("~/Admin/Image/UploadCoverPic")', //服务器端的上传页面地址
        //flash_swf_url: 'js/Moxie.swf', //swf文件，当需要使用swf方式进行上传时需要配置该参数
        //silverlight_xap_url: 'js/Moxie.xap' //silverlight文件，当需要使用silverlight方式进行上传时需要配置该参数
        filters: {
            mime_types: [ //只允许上传图片和zip文件
                { title: "Image files", extensions: "gif,jpg,jpeg,png" },
            ],
            max_file_size: '10240kb', //最大只能上传400kb的文件
        },
        multipart_params: {
            type: '@((int)UploadImageEnums.身份证)',
        },
        multi_selection: false,
    });
    //在实例对象上调用init()方法进行初始化
    uploader.init();

    //绑定文件上传完成后触发
    uploader.bind('UploadComplete', function (uploader, file, responseObject) {
        ////每个事件监听函数都会传入一些很有用的参数，
        ////我们可以利用这些参数提供的信息来做比如更新UI，提示上传进度等操作
        //alert(file);
    });

    //绑定
    uploader.bind('FilesAdded', function (uploader, files) {
        uploader.start();
    });

    //绑定
    uploader.bind('FileUploaded', function (uploader, file, responseObject) {
        var response = JSON.parse(responseObject.response);
        var url = imgschema + response.msg +"&mediaType=@((int)UploadImageEnums.身份证)";
        $(uploadObj).attr("src", url)
        $(uploadObj).attr("data-url", response.msg)
    });

    //绑定文件上传完成后触发
    uploader.bind('Error', function (uploader, errObject) {
        layer.msg('上传图片失败' + errObject.response);
    });

    $(function () {
        //全选
        $("#isDefault").on("click", function () {
            $(this).toggleClass("uncheck");
        });

        GetDatas();
    })
    //保存
    function Save() {
        var realName = StrTrim($("#realName").val());
        if (realName === "") {
            layerMes("请输入姓名", "#realName");
            $("#realName").focus();
            return false;
        }

        var phone = StrTrim($("#telPhone").val());
        if (phone === "") {
            layerMes("请输入要绑定的手机号", "#telPhone");
            $("#telPhone").focus();
            return false;
        }

        var prePhoneType = $('#prePhoneType').val()
        if (prePhoneType ==@((int)PhoneTypeEnums.中国)) {
            var reg = /^1[3456789]\d{9}$/; //正则表达式
            if (!(reg.test(phone))) {
                layerMes("手机号格式错误", "#telPhone");
                $("#telPhone").focus();
                return false;
            }
        } else {//澳洲手机号
            var reg = /^\d{9}$/; //正则表达式
            if (!reg.test(phone)) {
                layerMes("手机号格式错误", "#telPhone");
                $("#telPhone").focus();
                return false;
            }
        }

        var countryId = StrTrim($('#county').val());
        var countryName = StrTrim($('#county').find("option:selected").text());
        if (countryId < 0 || countryName === "") {
            layerMes("请选择所在国家", "#county");
            $('#county').focus();
            return false;
        }


        var provinceId = StrTrim($('#province').val());
        var provinceName = StrTrim($('#province').find("option:selected").text());
        if (provinceId < 0 || provinceName === "") {
            layerMes("请选择所在省", "#province");
            return false;
        }

        var cityId = StrTrim($('#city').val());
        var cityName = StrTrim($('#city').find("option:selected").text());
        if (cityId < 0 || cityName === "") {
            layerMes("请选择所在市", "#city");
            return false;
        }

        var districtId = StrTrim($('#district').val());
        var districtName = StrTrim($('#district').find("option:selected").text());
        //if (districtId < 0 || districtName === "") {
        //    layerMes("请选择所在区县", "#district");
        //    return false;
        //}

        var address = StrTrim($("#address").val());
        if (address === "") {
            layerMes("请输入详细地址", "#address");
            return false;
        }

        var postCode = StrTrim($("#postCode").val());
        //if (postCode === "") {
        //    layerMes("请输入邮编", "#postCode");
        //    return false;
        //}

        var identityCard = StrTrim($("#identityCard").val());
        if (identityCard === "") {
            layerMes("请输入身份证号码", "#identityCard");
            return false;
        }

        var reg = /^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/;
        if (!(reg.test(identityCard))) {
            layerMes("身份证格式错误", "#identityCard");
            return false;
        }

        var isDefault = !$("#isDefault").hasClass("uncheck")

        var iDPhotoNegative = StrTrim($("#idCard0 img").attr("data-url"));
        if (iDPhotoNegative === "") {
            layerMes("请上传身份证正面照片", "#idCard0");
            return false;
        }

        var iDPhotoPositive = StrTrim($("#idCard1 img").attr("data-url"));
        if (iDPhotoPositive === "") {
            layerMes("请上传身份证反面照片", "#idCard1");
            return false;
        }

        $ajaxFunc("@Url.Content("~/UserCenter/SaveAddress")",
        {
            "Id": @(Model.Address?.Id??0),
            "RealName": realName,
            "PrePhoneType": prePhoneType,
            "TelPhone": phone,
            "CountryId": countryId,
            "CountryName": countryName,
            "ProvinceId": provinceId,
            "ProvinceName": provinceName,
            "CityId": cityId,
            "CityName": cityName,
            "DistrictId": districtId,
            "DistrictName": districtName,
            "Address": address,
            "PostCode": postCode,
            "IdentityCard": identityCard,
            "IsDefault": isDefault,
            "IDPhotoNegative": iDPhotoNegative,
            "IDPhotoPositive": iDPhotoPositive,
        }, function (res) {
            if (res.code === 0) {
                layer.msg(res.msg);
                window.location.href = "@Url.Action("AddressManager","UserCenter")";
            } else {
                layer.msg(res.msg, { time: 1200, offset: 'auto', icon: 5 });
            }
        });

    }

    var cityList = [];
    var districtList = [];
    //查询数据
    function GetDatas() {
        $ajaxFunc("@Url.Content("~/UserCenter/GetAddressData")",{}, function (res) {
            if (res.code === 0) {
                cityList = res.model.CityList;
                districtList = res.model.DistrictList;
            } else {
                layer.msg(res.msg, { time: 1200, offset: 'auto', icon: 5 });
            }
        });
    }

    //省市县联动
    function AddressChange(type) {
        if (cityList == undefined || cityList.length <= 0 || districtList == undefined || districtList.length <= 0) {
            layer.msg('未查询到市县区是所有数据', { time: 1200, offset: 'auto', icon: 5 });
            return;
        }
        if (type==0) {//省变化
            $("#city").html('');
            var provinceId = $("#province").val();
            var filterarray = $.grep(cityList, function (value) {
                return value.ProID == provinceId;
            });
            if (filterarray != null && filterarray.length > 0) {
            for (var i = 0; i < filterarray.length; i++) {
                $("#city").append("<option value=" + filterarray[i].CityID + (i == 0 ? " selected" : "") + ">" + filterarray[i].CityName + "</option>");
                }
            }

            $("#district").html('');//市变化
            var ctyID = filterarray[0].CityID;
            var filterarray1 = $.grep(districtList, function (value) {
                return value.CityID == ctyID;
            });
            if (filterarray1 != null && filterarray1.length > 0) {
                $("#district").show();
                for (var i = 0; i < filterarray1.length; i++) {
                    $("#district").append("<option value=" + filterarray1[i].Id + (i == 0 ? " selected" : "") + ">" + filterarray1[i].DisName + "</option>");
                }
            } else {
                $("#district").hide();
            }

        } else {
            $("#district").html('');
            var ctyID = $("#city").val();
            var filterarray = $.grep(districtList, function (value) {
                return value.CityID == ctyID;
            });
            if (filterarray != null && filterarray.length > 0) {
                $("#district").show();
                for (var i = 0; i < filterarray.length; i++) {
                    $("#district").append("<option value=" + filterarray[i].Id + (i == 0 ? " selected" : "") + ">" + filterarray[i].DisName + "</option>");
                }
            } else {
                $("#district").hide();
            }
        }
    }

</script>
<style>
    .consigneeeditbox .editleft .tjbox .uncheck {
        background: url(@Url.Content("~/Assets/web/images/check.png")) no-repeat 0 0/100% 100%
    }
</style>